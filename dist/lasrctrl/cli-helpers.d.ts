import { TNetwork } from '../lib/types';
export declare const KEY_PAIR_FILE_PATH = ".lasr/wallet/keypair.json";
export declare const isInstalledPackage: boolean;
export declare const isTypeScriptProject: () => boolean;
export declare const installedPackagePath: string;
export declare function copyDirectory(src: string, dest: string): void;
export declare function runBuildProcess(programFilePath: string): Promise<void>;
export declare function buildNode(buildPath: string): Promise<void>;
export declare function getSecretKeyFromKeyPairFile(keypairFilePath: string): Promise<string>;
export declare function getAddressFromKeyPairFile(keypairFilePath: string): Promise<string>;
export declare function registerProgram(cid: string, secretKey: string, network: 'stable' | 'test'): Promise<string>;
export declare const getSecretKey: (secretKeyPath?: string, secretKey?: string) => Promise<string>;
export declare function callCreate(programAddress: string, symbol: string, name: string, initializedSupply: string, totalSupply: string, recipientAddress: string, network: TNetwork, secretKey: string, inputs?: string): Promise<string>;
export declare function sendTokens(programAddress: string, recipientAddress: string, amount: string, secretKey: string, network: 'stable' | 'test'): Promise<string>;
export declare function callProgram(programAddress: string, op: string, inputs: string, network: TNetwork, secretKey: string, value?: string): Promise<string>;
export declare function runTestProcess(programName: string, inputJsonPath: string, target?: string, showOutput?: boolean): Promise<unknown>;
export declare function createNewWallet(): Promise<void>;
export declare function checkWallet(address: string): Promise<void>;
