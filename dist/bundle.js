(()=>{"use strict";(t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})})({});class t{constructor(){this.methodStrategies={}}start(t){const{accountInfo:e,contractInput:n}=t;return this.executeMethod(e,n)}executeMethod(t,e){const{contractFn:n}=e,r=this.methodStrategies[n];if(r)return r(t,e);throw new Error(`Unknown method: ${n}`)}addOrExtendMethodStrategy(t,e,n=!1){if(n&&this.methodStrategies[t]){const n=this.methodStrategies[t];this.methodStrategies[t]=(t,r)=>{const o=n(t,r);return e(t,r,o)}}else this.methodStrategies[t]=e}}!function(t){const e=(new TextEncoder).encode(JSON.stringify(t)),n=new Uint8Array(e);Javy.IO.writeSync(1,n)}((e=>{const n=new t;return n.addOrExtendMethodStrategy("splitEvenly",((t,{functionInputs:e})=>{const{amount:n,recipients:r}=e;return{success:!0,transactions:r.map((t=>({recipient:t,amount:Math.floor(n/r.length)})))}})),n.start(e)})(function(){const t=[];let e=0;const n=new Uint8Array(1024),r=Javy.IO.readSync(0,n);e+=r,t.push(n.subarray(0,r));const{finalBuffer:o}=t.reduce(((t,e)=>(t.finalBuffer.set(e,t.bufferOffset),t.bufferOffset+=e.length,t)),{bufferOffset:0,finalBuffer:new Uint8Array(e)});return JSON.parse((new TextDecoder).decode(o))}()))})();